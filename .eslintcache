[{"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\serviceWorker.ts":"1","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\index.js":"2","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\App.js":"3","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab1.js":"4","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab3.js":"5","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab2.js":"6","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\ExploreContainer.js":"7","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\StopWatch.js":"8"},{"size":5213,"mtime":1609862427000,"results":"9","hashOfConfig":"10"},{"size":436,"mtime":1611237632117,"results":"11","hashOfConfig":"10"},{"size":2065,"mtime":1611303758034,"results":"12","hashOfConfig":"10"},{"size":665,"mtime":1611237541721,"results":"13","hashOfConfig":"10"},{"size":630,"mtime":1611303868836,"results":"14","hashOfConfig":"10"},{"size":634,"mtime":1611303401178,"results":"15","hashOfConfig":"10"},{"size":749,"mtime":1611237541636,"results":"16","hashOfConfig":"10"},{"size":3446,"mtime":1611309394744,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bl7o53",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\serviceWorker.ts",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\index.js",[],["37","38"],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\App.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab1.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab3.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab2.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\ExploreContainer.js",[],["39","40"],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\StopWatch.js",["41","42","43","44"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { IonItem, IonLabel, IonCardContent, IonDatetime } from \"@ionic/react\";\r\nimport \"./StopWatchStyle.css\";\r\n\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nconst StopWatch = () => {\r\n  const [time, setTime] = useState(\"00:10\");\r\n  const [currentValue, setCurrentValue] = useState(\r\n    Number(time.split(\":\")[0]) * 60 + Number(time.split(\":\")[1])\r\n  );\r\n\r\n  const SetCurrentValue = () => {\r\n    setCurrentValue(\r\n      Number(time.split(\":\")[0]) * 60 + Number(time.split(\":\")[1])\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    changeTime();\r\n    SetCurrentValue();\r\n    console.log(\"use effect worked ! \", time, currentValue);\r\n  }, [currentValue, time]);\r\n\r\n  const [start, setStart] = useState(false);\r\n\r\n  //^ display time text\r\n  const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60);\r\n    const seconds = remainingTime % 60;\r\n\r\n    return (\r\n      <h2 style={{ fontSize: \"40px\" }}>\r\n        {minutes}:{seconds}\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  function runTimmer() {\r\n    setStart((e) => !e);\r\n  }\r\n\r\n  function getCurrentValue() {\r\n    console.log(currentValue);\r\n    return currentValue;\r\n  }\r\n\r\n  function changeTime(e) {\r\n    SetCurrentValue();\r\n  }\r\n\r\n  //* time spinner function\r\n\r\n  function TimeSpinner() {\r\n    return (\r\n      <>\r\n        <div className=\"container-time\" onClick={runTimmer}>\r\n          <CountdownCircleTimer\r\n            isPlaying={start}\r\n            duration={getCurrentValue()}\r\n            colors={[\r\n              [\"#dd32d0\", 0.2],\r\n              [\"#17e93a\", 0.7],\r\n              [\"#e4f30d\", 0.83],\r\n            ]}\r\n            initialRemainingTime={getCurrentValue()}\r\n            // isLinearGradient={true}\r\n            strokeWidth={25}\r\n            size={250}\r\n            rotation={\"clockwise\"}\r\n            trailColor={\"transparent\"}\r\n            fontSize={30}\r\n            key={getCurrentValue()}\r\n            onComplete={() => {\r\n              setStart((e) => !e);\r\n              SetCurrentValue();\r\n              return [start, 0];\r\n            }}\r\n          >\r\n            {children}\r\n          </CountdownCircleTimer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  //* time selector modal function\r\n\r\n  function TimeSelector() {\r\n    return (\r\n      <>\r\n        <div className=\"timeSelector-wrap\">\r\n          <IonCardContent style={{ marginBottom: \"30px !important\" }}>\r\n            <IonDatetime\r\n              pickerOptions={{\r\n                buttons: [\r\n                  {\r\n                    text: \"Cancle\",\r\n                    handler: () => {},\r\n                  },\r\n                  {\r\n                    text: \"Done\",\r\n                    handler: (e) => {\r\n                      const makeTime = `${e.minute.text}:${e.second.text}`;\r\n                      setTime(makeTime);\r\n                      changeTime();\r\n                      SetCurrentValue();\r\n                    },\r\n                  },\r\n                ],\r\n              }}\r\n              display-format=\"mm:ss\"\r\n              placeholder=\"Set Time\"\r\n              mode=\"ios\"\r\n            ></IonDatetime>\r\n          </IonCardContent>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ion-text-header\">\r\n        <h3>Time:</h3>\r\n        <h3>{time}</h3>\r\n      </div>\r\n      {TimeSpinner()}\r\n\r\n      {TimeSelector()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StopWatch;\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":38,"nodeType":"53","messageId":"54","endLine":1,"endColumn":44},{"ruleId":"51","severity":1,"message":"55","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":17},{"ruleId":"51","severity":1,"message":"56","line":2,"column":19,"nodeType":"53","messageId":"54","endLine":2,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":23,"column":6,"nodeType":"59","endLine":23,"endColumn":26,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'IonItem' is defined but never used.","'IonLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SetCurrentValue' and 'changeTime'. Either include them or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [SetCurrentValue, changeTime, currentValue, time]",{"range":"66","text":"67"},[719,739],"[SetCurrentValue, changeTime, currentValue, time]"]