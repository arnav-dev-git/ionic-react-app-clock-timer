[{"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\serviceWorker.ts":"1","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\index.js":"2","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\App.js":"3","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab1.js":"4","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab3.js":"5","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab2.js":"6","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\ExploreContainer.js":"7","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\StopWatch.js":"8","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\LightDarkMode.js":"9","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\Clock.js":"10"},{"size":5213,"mtime":1609862427000,"results":"11","hashOfConfig":"12"},{"size":430,"mtime":1611380988881,"results":"13","hashOfConfig":"12"},{"size":2698,"mtime":1611394630912,"results":"14","hashOfConfig":"12"},{"size":665,"mtime":1611237541721,"results":"15","hashOfConfig":"12"},{"size":652,"mtime":1611394400163,"results":"16","hashOfConfig":"12"},{"size":634,"mtime":1611406062369,"results":"17","hashOfConfig":"12"},{"size":843,"mtime":1611416159896,"results":"18","hashOfConfig":"12"},{"size":3765,"mtime":1611405952948,"results":"19","hashOfConfig":"12"},{"size":861,"mtime":1611400841773,"results":"20","hashOfConfig":"12"},{"size":1029,"mtime":1611418400482,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"bl7o53",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\serviceWorker.ts",[],["45","46"],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\index.js",[],["47","48"],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\App.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab1.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab3.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\pages\\Tab2.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\ExploreContainer.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\StopWatch.js",["49"],"import React, { useEffect, useState } from \"react\";\r\nimport { IonCardContent, IonDatetime } from \"@ionic/react\";\r\nimport useSound from \"use-sound\";\r\nimport \"./StopWatchStyle.css\";\r\n\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport deskBell from \"../music/deskBell.mp3\";\r\n\r\nconst StopWatch = () => {\r\n  //!sound\r\n  const [play] = useSound(deskBell);\r\n\r\n  const [time, setTime] = useState(\"00:10\");\r\n  const [currentValue, setCurrentValue] = useState(\r\n    Number(time.split(\":\")[0]) * 60 + Number(time.split(\":\")[1])\r\n  );\r\n\r\n  const SetCurrentValue = () => {\r\n    setCurrentValue(\r\n      Number(time.split(\":\")[0]) * 60 + Number(time.split(\":\")[1])\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    changeTime();\r\n    SetCurrentValue();\r\n    // console.log(\"use effect worked ! \", time, currentValue);\r\n  }, [time, currentValue]);\r\n\r\n  const [start, setStart] = useState(false);\r\n\r\n  //^ display time text\r\n  const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60);\r\n    const seconds = remainingTime % 60;\r\n\r\n    return (\r\n      <h2 style={{ fontSize: \"40px\" }}>\r\n        {minutes}:{seconds}\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  function runTimmer() {\r\n    setStart((e) => !e);\r\n  }\r\n\r\n  function getCurrentValue() {\r\n    return currentValue;\r\n  }\r\n\r\n  function changeTime() {\r\n    SetCurrentValue();\r\n  }\r\n\r\n  //* time spinner function\r\n\r\n  function TimeSpinner() {\r\n    return (\r\n      <>\r\n        <div className=\"container-time\" onClick={runTimmer}>\r\n          <CountdownCircleTimer\r\n            isPlaying={start}\r\n            duration={getCurrentValue()}\r\n            colors={[\r\n              [\"#dd32d0\", 0.2],\r\n              [\"#17e93a\", 0.4],\r\n              [\"#e4f30d\", 0.5],\r\n              [\"#85FFBD\", 0.7],\r\n              [\"#00ffd3\", 0.76],\r\n            ]}\r\n            // colors={[\r\n            //   [\"#85FFBD\", 0.3],\r\n            //   [\"#FFFB7D\", 0.5],\r\n            //   [\"#00ffd3\", 1.0],\r\n            // ]}\r\n            initialRemainingTime={getCurrentValue()}\r\n            // isLinearGradient={true}\r\n            strokeWidth={25}\r\n            size={250}\r\n            rotation={\"clockwise\"}\r\n            trailColor={\"transparent\"}\r\n            fontSize={30}\r\n            key={getCurrentValue()}\r\n            onComplete={() => {\r\n              setStart((e) => !e);\r\n              play();\r\n              SetCurrentValue();\r\n              return [start, 200];\r\n            }}\r\n          >\r\n            {children}\r\n          </CountdownCircleTimer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  //* time selector modal function\r\n\r\n  function TimeSelector() {\r\n    return (\r\n      <>\r\n        <div className=\"timeSelector-wrap\">\r\n          <IonCardContent style={{ marginBottom: \"30px !important\" }}>\r\n            <IonDatetime\r\n              pickerOptions={{\r\n                buttons: [\r\n                  {\r\n                    text: \"Cancle\",\r\n                    handler: () => {},\r\n                  },\r\n                  {\r\n                    text: \"Done\",\r\n                    handler: (e) => {\r\n                      const makeTime = `${e.minute.text}:${e.second.text}`;\r\n                      setTime(makeTime);\r\n                      changeTime();\r\n                      SetCurrentValue();\r\n                    },\r\n                  },\r\n                ],\r\n              }}\r\n              display-format=\"mm:ss\"\r\n              placeholder=\"Set Time\"\r\n              mode=\"ios\"\r\n            ></IonDatetime>\r\n          </IonCardContent>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ion-text-header\">\r\n        <h3>Time:</h3>\r\n        <h3>{time}</h3>\r\n      </div>\r\n      {TimeSpinner()}\r\n      {TimeSelector()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StopWatch;\r\n","C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\LightDarkMode.js",[],"C:\\Users\\KIIT\\Desktop\\ionic app\\app2\\myApp\\src\\components\\Clock.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":28,"column":6,"nodeType":"56","endLine":28,"endColumn":26,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SetCurrentValue' and 'changeTime'. Either include them or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [time, currentValue, changeTime, SetCurrentValue]",{"range":"63","text":"64"},[829,849],"[time, currentValue, changeTime, SetCurrentValue]"]